---
import type { Project } from '../types';

import url from '../assets/icons/url.svg?raw';
import github from '../assets/icons/github.svg?raw';
import { readdir } from 'node:fs/promises';
import { join } from 'node:path';

interface Props {
	data: Project;
}

const { data } = Astro.props;
let thumbnails: string[] = [];
if (data.thumbnails) {
	const thumbnailsFolder = join('public/images/thumbnails', data.thumbnails);
	const files = await readdir(thumbnailsFolder);
	thumbnails = files.map(
		(f: string) => `/images/thumbnails/${data.thumbnails}/${f}`
	);
}
---

<div class='px-0 py-1 w-full lg:p-1 lg:w-1/2 xl:w-1/3'>
	<div class='border-2 border-gray-300 dark:border-gray-700 rounded-lg h-full'>
		<div class='p-4'>
			<div class='flex justify-between'>
				<h3 class='font-bold text-lg'>{data.name}</h3>
				<div class='flex items-center gap-1'>
					{
						data.url && (
							<a
								href={data.url}
								class='inline-block w-4 h-4 fill-black dark:fill-white'
							>
								<Fragment set:html={url} />
							</a>
						)
					}
					{
						data.code_url && (
							<a
								href={data.code_url}
								class='inline-block w-5 h-5 fill-black dark:fill-white'
							>
								<Fragment set:html={github} />
							</a>
						)
					}
				</div>
			</div>
			<div class='flex gap-2 my-2 select-none flex-wrap'>
				{
					data.technologies.map((t) => (
						<small class='rounded-xl px-2 text-xs bg-gray-300 dark:bg-slate-600 dark:text-white'>
							{t}
						</small>
					))
				}
			</div>
			<p>{data.description}</p>
		</div>
		{
			thumbnails.map((t: string) => (
				<img
					src={t}
					alt={data.name + '-thumbnail'}
					class='rounded-b-lg w-full h-52 object-cover'
				/>
			))
		}
	</div>
</div>
